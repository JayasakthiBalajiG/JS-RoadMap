{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17120\viewh14420\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs22 \cf0 Js engine uses stack memory\
var let const \
var doesn\'92t follow scope stuffs\
var can be used for hoisting; hoisting is using a variable before declaration\
const variables cannot be reassigned, but elements can be pushed, changes etc..,\
\
To release the acquired memory in js we could use delete for object properties, but for variables and array, 
\f1\b null
\f0\b0  to be initiated to the name of the variable; variable_name = null \
\
Operators - completed, short hand assignment operator\
? - ternary operator  \
\
dummy &&= 67; previously assigned value is true then second value is assigned \
||= previously assigned value is true or false, 2nd value is assigned\
??= 1st value is not assigned or undefined, 2nd value is assigned\
\
Pure functions - always return same output if same input is passed\
\
Loops:\
for\
For of\
For in loops - used to iterate inside an \
for(key in object_name)\
\
In js we can assign a function to a variable\
\
toPrecsion(//5) - used to print a decimal values of the number, 5 decimal values will be printed of the number.\
\

\f1\b super vs this keyword:
\f0\b0 \
super keyword is used to inherit the member functions and data members from the parent class\
this keyword is to access the upper function works like a closure.\
\
Class - super keyword used to call the parent\'92s class constructor, methods.\
new keyword - used to create instance of a class \
\
Constructors are used to create new obj and set of values for the pre existing properties\
\
Arrays\
Mutable to the parent array\
sort() - sort an array - stores in a sequential manner - ok for strings but stringed nos can\'92t work with only the sort() - a,b arguments are needed\
toSorted() - to create a new array and stores in the sorted format\
push() - add elements at the ends\
shift() - remove first element from the array\
unshift() - add anything at the start of the array - and if logged it - returns the length of the array after modification.\
includes() - search item as a parameter - gives true or false\
splice() - removes the element from the parent array => splice(index, how_many_elements_to_delete)\
assigns() - assigning 2 or more objs to new object\
join() - concats all the array elements into one element which can assigned to a variable\
every() - returns bool value if all the conditions satisfy\
some() - returns bool value if anyone condition satisfies\
indexOf(search_element, from_index_array) - passed 2 arguments \
findIndex() - returns the index of the element when passed\
fill() - fills the empty array with the argument passed inside it\
\
Immutable to the parent array\
slice(start, end) - divides the array and assigns to new array\
concat()\
map() - maps arr to new arr based on instructions\
filter() - assigns arr to new arr with conditions \
\

\f1\b reduce
\f0\b0 () - 2 parameters - 1st parameter is a function(), 2nd parameter is the start value of the assigning variable inside the function\
arr_name.reduce(function(assigning_value, iterable_element)\{\
return assign_value operation arr.key \
\}, start_value)\
\
Shallow clone and deep clone - shallow does not clone inherited child but deep does\
\
Set - stores the values in hash table manner\
\
Arrays and set - stores values \
Maps and objects - stores in key value pairs\
\
Js class is not an obj its a template for obj\
\
Snippets that wait or block the execution to fetch - sync or blocked way\
Js snippets will execute till the end instead of waiting to the I/O or HHTP requests - non blocking way -async\
\
Call backs - a function used in AJAX requests and timeout (traditional way of handling asynchronous function\
Promise - is an object (pending, fulfilled, rejected) - resolve, reject - function which implements another function inside it by having parameters like resolve, reject\
.then()\
.catch()\
\
Async - used for concurrency\
Async - before a function makes the func to return a promise\
.then()\
.catch()\
\
await can be only used in async fun - pauses the execution and waits for the resolved promise.\
\
Prototype - a prototype object that inherits the objects like array, objects- a property allows to add new properties(arguments) and methods to object constructors.\
\
AJAX - Async js and XML - can use this to make a call with the normal execution - done with fetch() API\
\

\f1\b Comparison:
\f0\b0 \

\f1\b Fetch
\f0\b0  promises only reject when there is interruption like network error and so on\'85\

\f1\b XMLHttp
\f0\b0  API - XML data storage - like html tags as column name - XMLHttpRequest() - works with Callbacks - returns only the data\

\f1\b Fetch
\f0\b0  API -JSON - key value pairs - works with Promises - returns both data and information of the response object - response obj should be converted to json for fetching like response.json()\

\f1\b Axios
\f0\b0  library is promise based HTTP client for node and the browser - ease of use, can be used both in browser and in server\
xhr? - for API fetch\
\
Headers - passing meta data to API for helping the server to understand what type of request is sent\
GET POST PUT DELETE\
even though the fetching is not done the fetch function works till the end until there is a network interruption.\
\
\
To change the data in database using json we need to add headers and stringify the json to make the successful change in the body parameter.\
XML readyState values:\
0 -unsent\
1- opened \
2 - headers received\
3 - loading\
4- done\
\
Spread and rest operators\
Template literals - usage of $ in log \
\
Try catch throw finally\
throw - throw \'93anything to get printed\'94  - can be used in control statements.\
Syntax error, Reference error - occurs when a variable is used as ref when not declared (let x=0; y = x+x; //y is not declared), TypeError()\
\
\
Immutability is important to have a consistency and important in state management\
Primitive types are immutable, but arrays, objects are mutable\
Can make arrays and objects immutable by using spread operators.\
arr = [\'85]\
arr.push(8) - mutability happens so,\
arr[\'85arr,8]\
\
When an array with flash elements are pushed to a new array - both the true and false values are pushed, but if the elements are checked whether it is truthy or filtered only true values are pushed.\
\
Higher order functions - takes one or more funcs as arguments and returns also a function. Eg: map(), filter(), reduce(), sort() - as these functions take a another function as argument inside them.\
Callback fn - is passed as argument to a function and executes when called inside the function where passed.\
\
arrow fns - 7 forms of declarations\
\'93use strict\'94 - if this literal is used undeclared variables cannot be used \
\

\f1\b Recursion
\f0\b0  - 3 main factors\
1. Function definition\
2. Base condition\
3. Recursive call\
Recursion is simple - less time complexity but occupies more space - for DOM and file directory\

\f1\b => 
\f0\b0 Recursion is done with stacks - when fns calls itself, a new stack frame is created called as 
\f1\b stack
\f0\b0 , when it reaches to the base case, the stack pops. If base case is not reasonable and stack memory got deepened or filled 
\f1\b stackoverflow
\f0\b0  error happens\
\

\f1\b Inheritance
\f0\b0  - class based and function based inheritance - done with prototype - to inherit a function 
\f1\b (child_fun.prototype = Object.create(parent_fun.prototype))\
\
Encapsulation
\f0\b0  - process of hiding data from being accessible, securing the properties of the object. - done through private variables\
\
\
Event loop in js - web API -> call queue -> call stack -> repeat\
\
Cookies - 1st and 3rd party cookies - 1st -> website and browser, 3rd -> to advertisers\
Local storage and session storage - main diff is session of the page in the browser.\
\
Cross site scripting XSS - hacker executes vulnerable script in the user\'92s browser to take sensitive data\
Cross site request forgery - tricks the user to perform unwanted actions\
\
\
\
\
\
\

\f1\b React Native\

\f0\b0 To find the version of react native - npx npm view react-native
\f1\b \

\f0\b0 ESLint - open source project helps to fix the problems\
metro config file - converts js to native application - compiles while converts and shows errors if exists.\
\
Terminal cmds:\
1. npx react-native init <name>\
2. npx react-native run-ins \
3. To list the iOS booted simulators - xcrun simctl list devices booted\
4. adb devices - to see android emulators\
\
React native - react js based framework design mobile apps\
\
JSX - JS XML - allows to write HTML in react\

\f1\b components
\f0\b0  - Text, view, image, textInput, scrollView, styleSheet, button, switch etc..,\
view is the fundamental component for UI view\
Only two data controls the components - state and props\

\f1\b Props
\f0\b0  - these are the set by the parent and fixed throughout the lifetime\

\f1\b State
\f0\b0  - the data to be changed is set as state - in react state refers to a object that determines how the component renders and behaves\
\
React JS nd native = React JS use web components and react native uses native components \
Native uses native API to render components for mobile applications.\
\
Virtual DOM is a light weight representation of actual DOM, its a js obj which contains all the properties and attributes of the actual DOM - doesn\'92t have the power directly to change the layout of the document, but can be manipulated fast compared to actual DOM\
Advantages - As actual DOM needs to be re-rendered from beginning the virtual DOM just changes the updated values and then syncs with the actual DOM\
\
DOM - represented as tree data structure (tree representation), represents the entire UI for the application\
Disadvantages - if any changes in UI, the DOM is also needed to be updated and re-rendered from the beginning \
\

\f1\b Diffing
\f0\b0  - (Comparison) Virtual DOM mirrors the actual DOM into 2 copies and any changes to UI will be reflected in copy 1 and the changes difference will be compared with copy2, if any changes available, request will be sent to actual DOM for the changes only rather than re-rendering the whole tree. - uses 
\f1\b diffing algorithm
\f0\b0 .\

\f1\b Reconciliation
\f0\b0  - the UI sync of virtual DOM to the actual DOM (React DOM) and the library used here is 
\f1\b ReactDOM\
\

\f0\b0 React native CLI - text based interface for user to interact with software and OS, set of commands for use of react native projects.\
Expo vs React CLI - expo implementation is simplified but limited access to native core modules. React native CLI opposite of expo - traditional way of creating native applications\
\

\f1\b React architecture :
\f0\b0 \
1. JS code() = includes react components, logics\
2. Bridge = communication channel between JS and native platform - this part translates the JS calls into native platform specific instructions\
3. React Native components = core components like, View, Text, Image, Scroll view\
4. Native modules = These modules are customly developed to specific instructions or APIs, and exposed to Bridge\
5. Platform APIs = platform specific APIs for accessing camera, file storage, location etc..,\
6. UI thread and rendering = renders UI components in threads\
7. Packager = Mento bundler - bundles JS code, assets, dependencies into format for mobile application\
8. Dev env = IDE for development - applications\
\
useState hook works like the state variable - takes a single argument and returns an array that contains two elements\
const [state, setState()] = useState(initialVlaue)\
initialValue is the start value, state is the current state, setState() is a function to update the current state  \
\
Components\
Button, TextInput are the self closing components\
\
\
\
Properties:\
Flex props are important for layouts designing\
flex, flexDirection (row,column), justifyContent, alignItems\

\f1\b justifyContent
\f0\b0  is for main axis is left - right\

\f1\b alignItems
\f0\b0  is for cross axis is top - bottom\
}